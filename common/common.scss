$color-bg: rgb(6, 19, 28);
$header-height: 4em;
$blur-radius-bg: 5px;
$bd-filter: blur(5px) brightness(0.3);
$bd-filter-bg: blur($blur-radius-bg) brightness(0.2);

:root {
  // Discourse Variable Overrides
  --d-sidebar-admin-background: transparent;
  --header_background: transparent;
  --d-sidebar-background: transparent;
  --d-sidebar-active-background: rgba(255, 255, 255, 0.15);
  --font-family: "Cabin", Arial, sans-serif;
  --heading-font-family: "Cabin", Arial, sans-serif;

  // Discourse Color Variables, to later be replaced with Discourse Color Schemes
  --primary: rgb(234, 234, 234);
  --secondary: rgb(16, 16, 16);
  --tertiary: rgb(255, 222, 112);
  --tertiary-low: rgb(67, 63, 48);
  --tertiary-hover: rgb(255, 239, 157);
}

@font-face {
  font-family: "Cabin";
  src: url($cabin) format("truetype-variations"),
    url($cabin) format(truetype) tech(variations);
  font-weight: 400 700;
  font-style: normal;
}

@font-face {
  font-family: "Cabin";
  src: url($cabin-italic) format("truetype-variations"),
    url($cabin-italic) format(truetype) tech(variations);
  font-weight: 400 700;
  font-style: italic;
}

body {
  font-family: var(--font-family);
  background: {
    color: $color-bg;
    image: url($bg-2x-jpg);
    image: image-set(
      url($bg-avif) type("image/avif") 1x,
      url($bg-2x-avif) type("image/avif") 2x,
      url($bg-jpg) type("image/jpeg") 1x,
      url($bg-2x-jpg) type("image/jpeg") 2x
    );
    size: cover;
  }

  @supports not (backdrop-filter: blur(10px)) {
    background-image: none;
  }

  &::before {
    content: "";
    height: 100vh;
    height: 100lvh;
    width: 100vw;
    width: 100lvw;
    position: fixed;
    top: 0;
    left: 0;
    pointer-events: none;
    overflow: hidden;
    backdrop-filter: $bd-filter-bg;
    -webkit-backdrop-filter: $bd-filter-bg;
  }
}

#main-outlet {
  --1dvh: 1vh;
  @supports (height: 1dvh) {
    --1dvh: 1dvh;
  }
  position: sticky;
  height: calc(
    var(--composer-vh, var(--1dvh)) * 100 - var(--main-outlet-offset, 0px)
  );
  top: var(--main-outlet-offset);
  overflow-y: auto;
}

#main-outlet table {
  margin-left: 0;
}

a {
  color: var(--tertiary);
  transition: filter 0.2s ease-in-out;

  &.category-name {
    color: var(--tertiary);
  }

  &:hover {
    filter: brightness(1.3);
  }
}

.category-list tbody .category h3 a[href],
.category-list tbody .category h4 a[href] {
  color: var(--tertiary);
}

.select-kit-body,
.dropdown-menu,
.menu-panel,
.reply-area {
  background: transparent;
  backdrop-filter: $bd-filter;
}

.admin-reports.admin-contents nav,
.dashboard-next.admin-contents nav {
  position: relative;
  width: initial;
  padding-left: 0;
  margin-left: 0;
  margin-right: 0;
}

.boxed.white {
  background: transparent;
}

.dashboard-next .charts .chart-canvas {
  padding: 1em;
}

.admin-report-chart {
  background: white;
  border-radius: 10px;
}

.admin-report-stacked-chart .chart-canvas-container {
  height: calc(250px + 2em);
}

.sidebar-footer-wrapper .sidebar-footer-container::before {
  all: initial;
}

.dashboard-next .nav::before {
  all: initial;
}

.dashboard-next .nav::after {
  all: initial;
}

#create-topic[disabled],
#create-topic[disabled] + span {
  display: none;
}

.user-menu.revamped .tabs-list .btn.active {
  filter: brightness(3);
  background: rgba(255, 255, 255, 0.2);
}

.user-menu.revamped .tabs-list .btn.active:hover {
  background: rgba(255, 255, 255, 0.2);
}

.user-menu.revamped .tabs-list .btn:hover {
  background: rgba(255, 255, 255, 0.1);
}

.user-menu .quick-access-panel li,
.user-menu .quick-access-panel .read {
  background: transparent;
}

.user-menu .quick-access-panel li:hover {
  background: rgba(255, 255, 255, 0.2);
}

.menu-panel .panel-body-bottom .btn,
.menu-panel .panel-body-bottom .btn:hover {
  background: transparent;
}

.user-menu .quick-access-panel li.unread:hover {
  background: color-mix(in srgb, var(--primary) 30%, var(--tertiary-low) 100%);
}

#private-message-users {
  position: relative;
}

#private-message-users-body {
  position: absolute !important;
  inset: unset !important;
  margin: unset !important;
  transform: unset !important;
}
